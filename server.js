import 'dotenv/config';import express from 'express';import cors from 'cors';import crypto from 'crypto';import {z} from 'zod';import {S3Client,PutObjectCommand} from '@aws-sdk/client-s3';import {getSignedUrl} from '@aws-sdk/s3-request-presigner';const {PORT=10000,S3_ENDPOINT,S3_BUCKET,S3_REGION='auto',S3_ACCESS_KEY,S3_SECRET_KEY,S3_FORCE_PATH_STYLE='true',ALLOWED_ORIGINS='[]',PUBLIC_BASE_URL=''}=process.env;let allowed=[];try{allowed=JSON.parse(ALLOWED_ORIGINS)}catch{}const app=express();app.use(express.json());app.use((req,res,next)=>{if(['/api/health','/api/ping','/api/debug/env'].includes(req.path))return next();return cors({origin(o,cb){if(!o||allowed.includes(o))cb(null,true);else cb(new Error('CORS'))}})(req,res,next)});app.get('/api/health',(req,res)=>res.json({ok:true}));app.get('/api/ping',(req,res)=>res.json({pong:true}));app.get('/api/debug/env',(req,res)=>res.json({ok:true,env:{S3_ENDPOINT,S3_BUCKET,S3_REGION,S3_FORCE_PATH_STYLE,PUBLIC_BASE_URL,ALLOWED_ORIGINS:allowed,HAS_KEYS:Boolean(S3_ACCESS_KEY&&S3_SECRET_KEY),ACCESS_KEY_LEN:S3_ACCESS_KEY?S3_ACCESS_KEY.length:0,SECRET_KEY_LEN:S3_SECRET_KEY?S3_SECRET_KEY.length:0}}));const s3=new S3Client({region:S3_REGION,endpoint:S3_ENDPOINT,forcePathStyle:S3_FORCE_PATH_STYLE==='true',credentials:{accessKeyId:S3_ACCESS_KEY,secretAccessKey:S3_SECRET_KEY}});const safe=s=>s.replace(/[^a-zA-Z0-9._-]/g,'_');app.post('/api/presign',async(req,res)=>{try{const {filename,contentType}=z.object({filename:z.string().min(1),contentType:z.string().default('application/octet-stream')}).parse(req.body||{});const key=`${crypto.randomBytes(4).toString('hex')}/${Date.now()}-${safe(filename)}`;const put=new PutObjectCommand({Bucket:S3_BUCKET,Key:key,ContentType:contentType});const url=await getSignedUrl(s3,put,{expiresIn:900});let publicUrl='';if(/^https?:\/\//.test(PUBLIC_BASE_URL||''))publicUrl=`${PUBLIC_BASE_URL.replace(/\/$/,'')}/${key}`;res.json({ok:true,url,key,publicUrl});}catch(e){res.status(400).json({ok:false,error:String(e)})}});app.use((req,res)=>res.status(404).json({ok:false,error:'Not Found'}));app.listen(PORT,()=>console.log('Mixtli debug on',PORT));